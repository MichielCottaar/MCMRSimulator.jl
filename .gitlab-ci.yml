variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia"
  CI: "true"

default:
  image: julia:latest
  tags:
    - docker

.Pre-compile:
  stage: build
  script:
    - julia --project=@. -e "using Pkg; Pkg.build()"
    - julia -e 'using Pkg; Pkg.add("CairoMakie")'
  artifacts:
    paths:
      - .julia/
    expire_in: 2 hours

.Testing:
  script:
    - apt-get update
    - apt-get install -y xvfb
    - xvfb-run julia --project=@. -e 'using Pkg; Pkg.test(coverage=true)'
  after_script:
    - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; c, t = get_summary(process_folder()); using Printf; @printf "Test coverage %.2f%%\n" 100c / t'
  timeout: 2h
build_pages:
  script:
    - apt-get update
    - apt-get install -y git
    - julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate(); include("docs/make.jl")'
  only:
    - main
.benchmark-main:
  stage: deploy
  script:
    - apt-get update
    - apt-get install -y git
    - git fetch origin main
    - julia benchmark/run_benchmarks.jl origin/main
  except:
    - main
.benchmark-version:
  stage: deploy
  script:
    - apt-get update
    - apt-get install -y git
    - VERSION=`julia -e "using TOML; println(TOML.parsefile(\"Project.toml\")[\"version\"])"`
    - git fetch origin v${VERSION}
    - julia benchmark/run_benchmarks.jl v${VERSION}
  only:
    - main

