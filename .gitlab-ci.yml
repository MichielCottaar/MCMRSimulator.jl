include:
  - project: fsl/conda/fsl-ci-rules
    file:    .gitlab-ci.yml

stages:
  - build
  - test
  - fsl-ci-pre
  - fsl-ci-build
  - fsl-ci-test
  - fsl-ci-deploy

variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia"
  CI: "true"

default:
  image: julia:latest
  tags:
    - docker

Pre-compile:
  stage: build
  script:
    - julia --project=@. -e "using Pkg; Pkg.build()"
    - julia -e 'using Pkg; Pkg.add("CairoMakie")'
  artifacts:
    paths:
      - .julia/
    expire_in: 2 hours
  rules:
    - if:   $CI_PROJECT_PATH =~ /^ndcn0236.*/
      when: always
    - when: never

Testing:
  script:
    - apt-get update
    - apt-get install -y xvfb
    - xvfb-run julia --project=@. -e 'using Pkg; Pkg.test(coverage=true)'
  after_script:
    - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; c, t = get_summary(process_folder()); using Printf; @printf "Test coverage %.2f%%\n" 100c / t'
  timeout: 2h
  dependencies:
    - Pre-compile
  rules:
    - if:   $CI_COMMIT_TAG != null
      when: never
    - if:   $CI_PROJECT_PATH =~ /^ndcn0236.*/
      when: always
    - when: never

build_pages:
  script:
    - apt-get update
    - apt-get install -y git
    - julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate(); include("docs/make.jl")'
  dependencies:
    - Pre-compile
  rules:
    - if:   $CI_PROJECT_PATH !~ /^ndcn0236.*/
      when: never
    - if:   $CI_COMMIT_REF_NAME == "main"
      when: always
    - if:   $CI_COMMIT_TAG != null
      when: always
    - when: never

compile:
  script:
    - apt-get update
    - apt-get install -y clang
    - cd test
    - julia --project=.. -e 'import Pkg; Pkg.instantiate(); using PackageCompiler; create_app("..", "../mcmr", executables=["mcmr"=>"run_main"], precompile_execution_file="runtests_no_plot.jl")'
    - cd ..
    - mkdir compiled
    - tar -czf compiled/mcmr.tar.gz mcmr/*
  timeout: 2h
  artifacts:
    paths:
      - compiled
  dependencies:
    - Pre-compile
  only:
    - tags
    